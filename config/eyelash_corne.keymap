#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*
   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };
*/

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        /* Home Row Mods – Left Hand */

        h_row_l: h_row_l {
            compatible = "zmk,behavior-hold-tap";
            label = "H_ROW_L";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;

            /* Adjust these positions as needed for your left-hand home row keys */

            hold-trigger-key-positions = <14 15 16 17>;
            hold-trigger-on-release;
            flavor = "balanced";
        };

        /* Home Row Mods – Right Hand */

        h_row_r: h_row_r {
            compatible = "zmk,behavior-hold-tap";
            label = "H_ROW_R";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;

            /* Adjust these positions as needed for your right-hand home row keys */

            hold-trigger-key-positions = <23 24 25 26>;
            hold-trigger-on-release;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
        };

        l_hold_layer: l_hold_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "L_HOLD_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <42 43 44>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            quick-tap-ms = <170>;
        };

        cap_word: cap_word {
            compatible = "zmk,behavior-caps-word";
            label = "CAP_WORD";
            #binding-cells = <0>;
            continue-list = <UNDERSCORE BACKSPACE>;
        };

        r_hold_layer: r_hold_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "R_HOLD_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <45 46 47>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            quick-tap-ms = <170>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
            layers = <0 5 4>;
        };

        l_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        r_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <23 24>;
        };

        l_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <31 32>;
        };

        r_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <37 38>;
        };

        l_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
            require-prior-idle-ms = <100>;
        };

        r_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Base";
            bindings = <
&trans     &kp Q            &kp W            &kp E                &kp R                  &kp T                                       &kp UP                &kp Y                  &kp U                      &kp I                     &kp O            &kp P               &kp PIPE
&cap_word  &h_row_l LGUI A  &h_row_l LALT S  &h_row_l LCTRL D     &h_row_l LSHIFT F      &kp G                             &kp LEFT  &kp ENTER  &kp RIGHT  &kp H                  &h_row_r RIGHT_SHIFT J     &h_row_r RIGHT_CONTROL K  &h_row_r RALT L  &h_row_r RGUI SEMI  &kp APOS
&trans     &kp Z            &kp X            &kp C                &kp V                  &kp B                &kp SPACE              &kp DOWN              &kp N                  &kp M                      &kp COMMA                 &kp DOT          &kp FSLH            &trans
                                             &l_hold_layer 3 ESC  &l_hold_layer 1 SPACE  &l_hold_layer 2 TAB                                               &r_hold_layer 5 ENTER  &r_hold_layer 4 BACKSPACE  &r_hold_layer 6 DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Nav {
            display-name = "Nav";
            bindings = <
&trans  &trans        &trans         &trans            &trans          &trans                    &trans          &trans        &trans     &trans         &trans     &trans     &kp DEL
&trans  &kp LEFT_GUI  &kp LEFT_ALT   &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans            &trans  &trans  &trans  &kp CAPSLOCK  &kp LEFT   &kp DOWN       &kp UP     &kp RIGHT  &trans
&trans  &trans        &kp RIGHT_ALT  &trans            &trans          &trans  &trans            &trans          &trans        &kp HOME   &kp PG_DN      &kp PG_UP  &kp END    &trans
                                     &trans            &trans          &trans                                    &trans        &kp ENTER  &kp BACKSPACE
            >;
        };

        Mouse {
            display-name = "Mouse";
            bindings = <
&trans  &trans        &trans         &trans            &trans          &trans                    &trans          &trans        &trans          &trans          &trans        &trans           &kp DEL
&trans  &kp LEFT_GUI  &kp LEFT_ALT   &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans            &trans  &trans  &trans  &kp CAPSLOCK  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &trans        &kp RIGHT_ALT  &trans            &trans          &trans  &trans            &trans          &trans        &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
                                     &trans            &trans          &trans                                    &mkp LCLK     &mkp RCLK       &mkp MCLK
            >;
        };

        media {
            display-name = "Media";
            bindings = <
&trans  &trans        &trans         &trans            &trans          &trans                    &trans          &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT   &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans            &trans  &to 8   &trans  &kp CAPSLOCK     &kp K_PREV       &kp C_VOL_DN     &kp C_VOLUME_UP  &kp K_NEXT       &trans
&trans  &trans        &kp RIGHT_ALT  &trans            &trans          &trans  &trans            &trans          &trans           &trans           &trans           &trans           &trans           &trans
                                     &trans            &trans          &trans                                    &mkp LCLK        &mkp RCLK        &mkp MCLK
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        num {
            display-name = "Num";
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8  &kp N9     &kp RBKT                     &trans          &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SEMI   &kp N4  &kp N5  &kp N6     &kp EQUAL            &trans  &trans  &trans  &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2  &kp N3     &kp BSLH   &trans            &trans          &trans  &trans     &trans     &kp RALT  &trans    &trans
                           &kp N0  &kp MINUS  &trans                                       &trans  &trans     &trans
            >;
        };

        sym {
            display-name = "Sym";
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND  &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE                    &trans          &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp COLON       &kp DOLLAR     &kp PERCENT           &kp CARET              &kp PLUS                   &trans  &trans  &trans  &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp TILDE       &kp EXCL       &kp AT                &kp HASH               &kp PIPE         &trans            &trans          &trans  &trans     &trans     &kp RALT  &trans    &trans
                                       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER                                          &trans  &trans     &trans
            >;
        };

        fun {
            display-name = "Fun";
            bindings = <
&trans  &kp F12  &kp F7  &kp F8             &kp F9     &kp SYSREQ                         &trans          &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5             &kp F6     &kp SCROLLLOCK             &trans  &trans  &trans  &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp F10  &kp F1  &kp F2             &kp F3     &kp PAUSE_BREAK  &trans            &trans          &trans  &trans     &trans     &kp RALT  &trans    &trans
                         &kp K_APPLICATION  &kp SPACE  &kp TAB                                            &trans  &trans     &trans
            >;
        };

        Flash {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &bt BT_CLR    &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
                        &trans  &trans  &trans                                    &trans        &trans        &trans
            >;
        };

        gaming_layer {
            bindings = <
&trans  &trans  &kp N1  &kp N2  &kp N3     &kp N4                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&kp T   &trans  &kp Q   &kp W   &kp E      &trans            &trans  &to 0   &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp Z   &kp A   &kp S   &kp D      &kp C   &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &kp SPACE  &trans                                    &trans  &trans  &trans
            >;

            label = "lash";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Flash_layer {
            if-layers = <1 2>;
            then-layer = <7>;
        };
    };
};
